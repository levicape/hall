{
  "name": "@levicape/greathall-qureau-io-canary",
  "version": "0.0.0-local-0",
  "config": {
    "packagemanager": "pnpm",
    "packageexecutor": "pnpm exec",
    "lintpaths": "./src",
    "outpaths": "./module",
    "protocols": "./src/_protocols",
    "canaryregister": "./module/canary/Register"
  },
  "dependencies": {
    "@bufbuild/protobuf": "catalog:protobuf",
    "@levicape/paloma": "catalog:",
    "@levicape/spork": "catalog:",
    "expect": "catalog:test",
    "knex": "catalog:database-sql",
    "ksuid": "catalog:id",
    "ts-proto": "catalog:protobuf",
    "zod": "catalog:core"
  },
  "devDependencies": {
    "@biomejs/biome": "catalog:lint",
    "@bufbuild/buf": "catalog:protobuf",
    "@types/node": "catalog:types",
    "publint": "catalog:package",
    "syncpack": "catalog:package",
    "typescript": "catalog:dev"
  },
  "exports": {
    ".": "./module/index.mjs"
  },
  "files": [
    "module"
  ],
  "nx": {
    "targets": {
      "build:module": {
        "dependsOn": [
          "build:tsc"
        ]
      },
      "build:tsc": {
        "dependsOn": [
          "generate:protocols"
        ]
      },
      "dx:precommit": {
        "dependsOn": [
          "dx:prepublish",
          "dx:test"
        ]
      },
      "dx:prepublish": {
        "dependsOn": [
          "dx:prepublish:pre",
          "dx:lint"
        ]
      },
      "dx:lint": {
        "dependsOn": [
          "nx:compile",
          "lint:format",
          "package:format"
        ]
      },
      "dx:test": {
        "dependsOn": [
          "dx:lint",
          "nx:test"
        ]
      },
      "nx:clean": {
        "dependsOn": [
          "clean:module"
        ]
      },
      "nx:compile": {
        "dependsOn": [
          "build:module"
        ]
      },
      "nx:test": {
        "dependsOn": [
          "test:noop"
        ]
      }
    }
  },
  "private": true,
  "publishConfig": {
    "registry": "https://npm.pkg.github.com/"
  },
  "repository": "github:levicape/great-hall",
  "scripts": {
    "build": "$npm_package_config_packageexecutor nx nx:compile",
    "build:tsc": "$npm_package_config_packageexecutor tsc",
    "canary:harness": "node $npm_package_config_canaryharness",
    "canary:server": "nohup node $npm_package_config_canaryserverhttp & node $npm_package_config_canaryserver",
    "clean": "$npm_package_config_packageexecutor nx nx:clean",
    "clean:module": "rm -rf $npm_package_config_outpaths || true",
    "dx:config:post": "$npm_package_config_packagemanager config set recursive-install true",
    "dx:config:pre": "$npm_package_config_packagemanager config set recursive-install false",
    "dx:precommit": "$npm_package_config_packageexecutor nx dx:precommit:pre && $npm_package_config_packageexecutor nx package:deps",
    "dx:precommit:pre": "echo \"Starting precommit dx. This will check package.json dependencies.\"",
    "dx:prepublish": "$npm_package_config_packageexecutor nx prepublish",
    "dx:prepublish:pre": "echo \"Starting prepublish dx. This will compile the package, lint it, format package.json and verify all exports are valid. \"",
    "generate:protocols": "NODE_NO_WARNINGS=1 NPM_CONFIG_UPDATE_NOTIFIER=false $npm_package_config_packageexecutor spork code gen --root \"../../protocols\" --command \"$(which $npm_package_config_packagemanager) --silent run build\" --artifact gen --destination $npm_package_config_protocols --clean",
    "lint": "$npm_package_config_packageexecutor nx exec -- biome check $npm_package_config_lintpaths",
    "lint:format": "$npm_package_config_packageexecutor nx exec -- biome check --write $npm_package_config_lintpaths",
    "lint:unsafe": "$npm_package_config_packageexecutor nx exec -- biome check --write --unsafe $npm_package_config_lintpaths",
    "package:deps": "$npm_package_config_packageexecutor nx exec -- depcheck",
    "package:fix": "$npm_package_config_packageexecutor nx exec -- syncpack fix-mismatches",
    "package:format": "$npm_package_config_packageexecutor nx exec -- syncpack format",
    "package:update": "$npm_package_config_packageexecutor nx exec -- syncpack update",
    "precommit": "$npm_package_config_packageexecutor nx dx:prepublish --no-cloud --verbose",
    "predx:lint": "$npm_package_config_packageexecutor nx clean",
    "prelint": "$npm_package_config_packageexecutor nx exec -- biome format $npm_package_config_lintpaths",
    "prepublish": "$npm_package_config_packageexecutor publint --strict",
    "start:canary:register": "node $npm_package_config_canaryregister.mjs",
    "test": "$npm_package_config_packageexecutor nx nx:test --no-cloud --verbose",
    "test:noop": "true"
  },
  "type": "module",
  "types": "module/index.d.mts"
}
