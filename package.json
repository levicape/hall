{
  "name": "@levicape/hall",
  "version": "0.0.0-local-0",
  "author": "Pedro Cardona",
  "config": {
    "packagemanager": "pnpm",
    "packagescript": "pnpm run",
    "packageexecutor": "pnpm exec",
    "lintpaths": "./iac"
  },
  "devDependencies": {
    "@biomejs/biome": "catalog:lint",
    "@levicape/fourtwo": "catalog:",
    "@types/node": "catalog:types",
    "depcheck": "catalog:package",
    "nx": "catalog:project-nx",
    "publint": "catalog:package",
    "syncpack": "catalog:package",
    "tsx": "catalog:dev"
  },
  "engines": {
    "node": "22"
  },
  "files": [
    "iac/images",
    "README.md",
    "LICENSE"
  ],
  "license": "AGPL-3.0-only",
  "nx": {
    "targets": {
      "dx:precommit": {
        "dependsOn": [
          "dx:prepublish",
          "dx:test"
        ]
      },
      "dx:prepublish": {
        "dependsOn": [
          "dx:prepublish:pre",
          "dx:lint",
          "@levicape/hall-entri-io:dx:precommit",
          "@levicape/hall-entri-ui:dx:precommit",
          "@levicape/hall-gate-io:dx:precommit",
          "@levicape/hall-gate-ui:dx:precommit",
          "@levicape/hall-iac-stacks:dx:precommit"
        ]
      },
      "dx:lint": {
        "dependsOn": [
          "nx:compile",
          "lint:format",
          "package:format"
        ]
      },
      "dx:test": {
        "dependsOn": [
          "dx:lint",
          "nx:test"
        ]
      },
      "nx:clean": {
        "dependsOn": [
          "clean:module"
        ]
      },
      "nx:compile": {
        "dependsOn": [
          "@levicape/hall-entri-io:nx:compile",
          "@levicape/hall-entri-ui:nx:compile",
          "@levicape/hall-gate-io:nx:compile",
          "@levicape/hall-gate-ui:nx:compile"
        ]
      },
      "nx:sync": {
        "dependsOn": [
          "iac-workflows:nx:sync"
        ]
      },
      "nx:test": {
        "dependsOn": [
          "@levicape/hall-entri-io:nx:test",
          "@levicape/hall-entri-ui:nx:test",
          "@levicape/hall-gate-io:nx:test",
          "@levicape/hall-gate-ui:nx:test"
        ]
      }
    }
  },
  "packageManager": "pnpm@9.15.4+sha512.b2dc20e2fc72b3e18848459b37359a32064663e5627a51e4c74b2c29dd8e8e0491483c3abb40789cfd578bf362fb6ba8261b05f0387d76792ed6e23ea3b1b6a0",
  "pnpm": {
    "supportedArchitectures": {
      "os": [
        "linux",
        "darwin",
        "current"
      ],
      "cpu": [
        "x64",
        "arm64"
      ]
    }
  },
  "private": true,
  "publishConfig": {
    "registry": "https://npm.pkg.github.com/"
  },
  "repository": "github:levicape/great-hall",
  "scripts": {
    "build": "$npm_package_config_packageexecutor nx nx:compile --verbose",
    "clean": "$npm_package_config_packageexecutor nx nx:clean",
    "clean:module": "rm -rf $npm_package_config_outpaths || true",
    "clean:packages": "rm -rf **/node_modules && $npm_package_config_packageexecutor nx reset",
    "dx:commit": "$npm_package_config_packagescript clean:packages && $npm_package_config_packageexecutor nx dx:precommit --no-cloud --verbose",
    "dx:image": "$npm_package_config_packageexecutor nx pack:build iac-images-application --verbose",
    "dx:precommit": "$npm_package_config_packageexecutor nx dx:precommit:pre && $npm_package_config_packageexecutor nx dx:sync && $npm_package_config_packageexecutor nx package:deps",
    "dx:precommit:pre": "echo \"Starting precommit dx. This will recompile iac files and check package.json dependencies.\"",
    "dx:prepublish": "$npm_package_config_packageexecutor nx prepublishOnly",
    "dx:prepublish:pre": "echo \"Starting prepublish dx. This will compile the package, lint it, format package.json and verify all exports are valid. \"",
    "dx:sync": "$npm_package_config_packageexecutor nx dx:sync:pre && $npm_package_config_packageexecutor nx nx:sync --verbose",
    "dx:sync:pre": "echo \"Starting sync dx. This will generate all the workflows and sync them with the repository.\"",
    "lint": "$npm_package_config_packageexecutor biome check $npm_package_config_lintpaths",
    "lint:format": "$npm_package_config_packageexecutor biome check --write $npm_package_config_lintpaths",
    "lint:unsafe": "$npm_package_config_packageexecutor biome check --write --unsafe $npm_package_config_lintpaths",
    "package:deps": "$npm_package_config_packageexecutor depcheck",
    "package:fix": "$npm_package_config_packageexecutor syncpack fix-mismatches",
    "package:format": "$npm_package_config_packageexecutor syncpack format",
    "package:update": "$npm_package_config_packageexecutor syncpack update",
    "postclean:packages": "$npm_package_config_packagemanager install --ignore-scripts",
    "precommit": "$npm_package_config_packageexecutor nx dx:prepublish --no-cloud --verbose",
    "predx:lint": "$npm_package_config_packageexecutor nx clean",
    "prelint": "$npm_package_config_packageexecutor biome format $npm_package_config_lintpaths",
    "prepublishOnly": "$npm_package_config_packageexecutor publint --strict",
    "test": "$npm_package_config_packageexecutor nx nx:test --verbose",
    "xx:workflow": "$npm_package_config_packageexecutor nx run-many -t build,lint,test --parallel=1 --verbose --no-cloud && $npm_package_config_packageexecutor nx run-many -t package:deps,prepublish --parallel=1 --verbose --no-cloud"
  },
  "type": "commonjs"
}
