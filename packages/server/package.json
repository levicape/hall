{
  "name": "@levicape/greathall-server",
  "description": "Server for the Qureau protocol",
  "version": "0.0.0-local.0",
  "author": "Pedro Cardona",
  "config": {
    "packagemanager": "pnpm",
    "packageexecutor": "pnpm exec",
    "outpath": "./module",
    "srcpaths": "./src/app",
    "lintpaths": "./src ./canary ./iac",
    "i18n": "./src/_i18n",
    "protocols": "./src/_protocols",
    "models": "./src/_models",
    "moduleserver": "./module/cli/HonoHttpServer.mjs",
    "handlerhttplambda": "./module/lambda/HttpHandler.GreatHallLambda"
  },
  "dependencies": {
    "@bufbuild/protobuf": "catalog:protobuf",
    "@hono/node-server": "catalog:hono",
    "@hono/zod-validator": "catalog:hono",
    "@levicape/spork": "catalog:",
    "@paralleldrive/cuid2": "catalog:id",
    "@stricjs/cluster": "catalog:server",
    "@stricjs/utils": "catalog:server",
    "@stricli/core": "catalog:cli",
    "aws-lambda-ric": "catalog:aws",
    "aws4fetch": "catalog:aws",
    "compressible": "catalog:hono",
    "consola": "catalog:server",
    "hono": "catalog:hono",
    "hookable": "catalog:server",
    "http-status-codes": "catalog:http",
    "jsonwebtoken": "catalog:crypto",
    "ksuid": "catalog:id",
    "odata-filter-parser": "catalog:http",
    "slonik": "catalog:database",
    "ulidx": "catalog:id",
    "uuid-base64-ts": "catalog:id",
    "zod": "catalog:core"
  },
  "devDependencies": {
    "@biomejs/biome": "catalog:lint",
    "@bufbuild/buf": "catalog:protobuf",
    "@levicape/fourtwo": "catalog:",
    "@types/compressible": "catalog:types",
    "@types/jsonwebtoken": "catalog:types",
    "@types/node": "catalog:types",
    "expect": "catalog:test",
    "publint": "catalog:package",
    "ts-proto": "catalog:protobuf",
    "typescript": "catalog:dev"
  },
  "engines": {
    "node": ">=23.0.0"
  },
  "exports": {
    "./app": "./module/app/index.mjs"
  },
  "files": [
    "module"
  ],
  "license": "AGPL-3.0-only",
  "nx": {
    "targets": {
      "build:tsc": {
        "dependsOn": [
          "generate:protocols",
          "generate:models"
        ]
      },
      "dx:test": {
        "dependsOn": [
          "dx:lint",
          "nx:test"
        ]
      },
      "dx:precommit": {
        "dependsOn": [
          "@levicape/greathall-server:dx:prepublish",
          "nx:test"
        ]
      },
      "nx:compile": {
        "dependsOn": [
          "build:tsc"
        ]
      },
      "nx:test": {
        "dependsOn": [
          "test:module"
        ]
      }
    }
  },
  "packageManager": "pnpm@9.7.0+sha512.dc09430156b427f5ecfc79888899e1c39d2d690f004be70e05230b72cb173d96839587545d09429b55ac3c429c801b4dc3c0e002f653830a420fa2dd4e3cf9cf",
  "private": true,
  "publishConfig": {
    "registry": "https://npm.pkg.github.com/"
  },
  "repository": "github:levicape/great-hall",
  "scripts": {
    "build": "NODE_NO_WARNINGS=1 NPM_CONFIG_UPDATE_NOTIFIER=false $npm_package_config_packageexecutor nx nx:compile",
    "build:tsc": "NODE_NO_WARNINGS=1 NPM_CONFIG_UPDATE_NOTIFIER=false $npm_package_config_packageexecutor tsc",
    "clean": "rm -rf $npm_package_config_outpaths || true",
    "generate:i18n": "NODE_NO_WARNINGS=1 NPM_CONFIG_UPDATE_NOTIFIER=false $npm_package_config_packageexecutor spork code gen --root \"../../i18n\" --command \"$(which $npm_package_config_packagemanager) --silent run build\" --artifact module --destination $npm_package_config_i18n --clean",
    "generate:models": "NODE_NO_WARNINGS=1 NPM_CONFIG_UPDATE_NOTIFIER=false $npm_package_config_packageexecutor spork code gen --root \"../../models\" --command \"$(which $npm_package_config_packagemanager) --silent run build\" --artifact module --destination $npm_package_config_models --clean",
    "generate:protocols": "NODE_NO_WARNINGS=1 NPM_CONFIG_UPDATE_NOTIFIER=false $npm_package_config_packageexecutor spork code gen --root \"../../protocols\" --command \"$(which $npm_package_config_packagemanager) --silent run build\" --artifact gen --destination $npm_package_config_protocols --clean",
    "lambda:http": "$npm_package_config_packageexecutor aws-lambda-ric $npm_package_config_handlerhttplambda",
    "lint": "$npm_package_config_packageexecutor biome check $npm_package_config_srcpaths",
    "lint:format": "$npm_package_config_packageexecutor biome format --write $npm_package_config_srcpaths",
    "lint:unsafe": "$npm_package_config_packageexecutor biome check --write --unsafe $npm_package_config_srcpaths",
    "lint:write": "$npm_package_config_packageexecutor biome check --write $npm_package_config_srcpaths",
    "package:deps": "$npm_package_config_packageexecutor depcheck",
    "package:fix": "$npm_package_config_packageexecutor syncpack fix-mismatches",
    "package:format": "$npm_package_config_packageexecutor syncpack format",
    "package:update": "$npm_package_config_packageexecutor syncpack update",
    "predx:lint": "$npm_package_config_packagemanager run clean",
    "prelint": "$npm_package_config_packageexecutor biome format $npm_package_config_srcpaths",
    "prepublish": "$npm_package_config_packageexecutor publint --strict",
    "start": "$npm_package_config_packageexecutor spork server start $npm_package_config_moduleserver",
    "test": "$npm_package_config_packageexecutor nx nx:test --verbose",
    "test:module": "echo 'node --test  \"module/**/*.test.js\"'"
  },
  "type": "module",
  "types": "module/app/index.d.mts"
}
