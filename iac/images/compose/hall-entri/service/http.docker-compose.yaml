services:
  http:
    image: $APPLICATION_HALL_IMAGE
    entrypoint: project
    environment:      
      NODE_OPTIONS: $NODE_OPTIONS
      LOG_LEVEL: $LOG_LEVEL
      STRUCTURED_LOGGING: $STRUCTURED_LOGGING
      PROJECT_PATH: ./realms/entri/entri-io
      PROJECT_COMMAND: http:dev
      PORT: $ENTRI_HTTP
      ENTRI_DATABASE__NAME: "postgresql://entri_pgactive:5432"
      ENTRI_DATABASE__HOST: "entri_pgactive"
      ENTRI_DATABASE__PORT: "5432"
      ENTRI_DATABASE__SCHEMA: "public"
      ENTRI_DATABASE__DB_0: "compose"
      ENTRI_DATABASE__DB_0__OWNER_USERNAME: "pg"
      ENTRI_DATABASE__DB_0__OWNER_PASSWORD: "qwerasdf"
    depends_on:
      entri_pgactive:
        condition: service_healthy
    volumes: &workspace_volumes
      - ../../../../..:/workspace
    ports:
      - $ENTRI_HTTP:$ENTRI_HTTP
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://localhost:$ENTRI_HTTP/.well-known/healthcheck"]
      interval: 3s
      timeout: 8s
      retries: 5
  # http-canary:
  #   image: $ROOT_IMAGE
  #   entrypoint: project
  #   environment:
  #     NODE_OPTIONS: $NODE_OPTIONS
  #     LOG_LEVEL: $LOG_LEVEL
  #     STRUCTURED_LOGGING: $STRUCTURED_LOGGING
  #     PROJECT_PATH: ./realms/entri/entri-io
  #     PROJECT_COMMAND: http:canary
  #     ENTRI_HTTP: $ENTRI_HTTP
  #     ENTRI_UI: $ENTRI_UI
  #   volumes: *workspace_volumes
  #   depends_on:
  #     http:
  #       condition: service_healthy
  entri_pgactive:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: pg
      POSTGRES_PASSWORD: qwerasdf
      POSTGRES_DB: compose
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "pg", "-d", "compose"]
      interval: 1s
      timeout: 5s
      retries: 10
    ports:
      - $ENTRI_POSTGRES:5432
    volumes:
      - entri_active:/var/lib/postgresql/data 
  adminer:
    image: adminer
    restart: always
    ports:
      - $ENTRI_ADMINER:8080
volumes:
  entri_active:
